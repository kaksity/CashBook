<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFUAAAAtCAYAAADfhCf2AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAADMklEQVRoQ+2Y3W0TQRSFI1uWZT9FwvBi
        W0KyC4j8iIRCCZRAELzTQUqgBEqghJRACZQAJLyCuZ+zV5qszq43XK/5yT3Sp5098+Od4/F47JPtdpsc
        GGkmMaSZxJBmEkOaSQxpJjGkmcSQZhJDmkkMaSYxpJnEkGYSQ5pJDGm2MZ1OZ8qHyWTyWPkPDWk2MRqN
        Lmaz2bfBYPC8XodnddfW5m297qEhTQWBrlarH5vNZrtYLG7KYCnjUbder3/+T8Ganhpnqq4JadaxkF57
        oI4HWwbqVMG+UWP9a5gujStV14Q0S2yffGT6WobmzOfzm3qgDlvBeDx+osasU+nUeGV8NK6q6zvjVPU5
        FqbDhwrD4fCZBXitwlMsl8vv1udcjaUwnRmfK94bTOSD8YWy6nMsqmc5fKhAsLYq9wZ7n0ArESjhEWJd
        7Gcvb4t/TP2FCvuC/Y0VilidKtC/Rb2Hek5wKlAgcIJXfRWmFwYF9tOuog+rG3H18u5b+ra4awNKtCvH
        cPEMyu/1498aqHOfYP2BKXQQE2aboCPQ71N1RYzFPXgbyv6GcWW/9jqgD+Ja+ozp/foJtWugDl9qXYL1
        B6awR0zQ912fLCcDDwB5MJwgECuuvKcvIZermf0aaMd4iJXMllQGfthQORZxPFLhcZziWKXqOIZxHFNj
        OiYmTFj75O08UBdB1VdqKerwCYoXVFsCRzdCpM5hXDx0+FCBgzwH+jI0Am06/PNDgR8MaqwSk69AX01N
        2k3stnhHpa/aeKgEtXtBIdpQp0D9hAr89PRgPVCvK4OtAr0o+zZRiYcm2PoXhIvgm1aq/1BAbaG2rVRW
        JXttKV7HX6u/UIFg2QrKQB08/mzpGigUYmK+Yn0yhIzPpPCo597r1Z7aFCriDWB7IGBEwOynXBnbA6ee
        dnfGVc/fhDTbaPt7r+1vQUVNPDyTo8LxvQ4Rclnvq7RrqLwZ9CnH9y8n3szSp99xVuqhaRDhEWTTdlDW
        cfUyK6zeh3tfmS7u1fiEqPzduOr5m5BmEkOaSQxpJjGkmcSQZhJDmkkMaSYxpJnEkGYSQ5pJDGkmMaSZ
        xJBmEkOaSQxpJhG2J78A9HM4m7IYK0YAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnOkay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>